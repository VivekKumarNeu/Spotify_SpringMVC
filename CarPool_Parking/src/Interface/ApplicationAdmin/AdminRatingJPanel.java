/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ApplicationAdmin;

import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WebsiteAdminWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vivek
 */
public class AdminRatingJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminRatingJPanel
     */
    JPanel container;
    UserAccount useraccount;
    Organization organization;
    HashMap<String,ArrayList<String>> userdata;
    boolean flag=true;
    boolean flag1 = true;
    boolean flag2 = true;
    
    public AdminRatingJPanel(JPanel container,UserAccount useraccount,Organization organization) {
        initComponents();
        this.container = container;
        this.useraccount = useraccount;
        this.organization = organization;
        populatetable();
        populatecombobox();
    }

    public void populatecombobox()
    {
       userjComboBox.removeAllItems();
        DefaultTableModel model = (DefaultTableModel) adminratingjTable.getModel();
         ArrayList<String> ok = new ArrayList<>();
        
        for (int count = 0; count < model.getRowCount(); count++){
            if(model.getValueAt(count, 2).toString().equals("Approved")){
                if(ok.contains(model.getValueAt(count, 0).toString()))
                {
//                    if(flag1){
//               usersdatamap(model.getValueAt(count, 0).toString(),model.getValueAt(count, 3).toString());
//               
//                   }
                }else
                    ok.add(model.getValueAt(count, 0).toString());
                if(flag2){
                usersdatamap(model.getValueAt(count, 0).toString(),model.getValueAt(count, 3).toString());
               
                }
            }
        }
        for(int t =0;t<ok.size();t++)    
            userjComboBox.addItem(ok.get(t));
        flag1 = false;
        flag2=false;
    }
    
     public void populatetable()
    {
        DefaultTableModel model = (DefaultTableModel) adminratingjTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            if(request instanceof WebsiteAdminWorkRequest){
            Object[] row = new Object[4];
            row[0] = request.getReceiver();
            row[1] = request.getSender();
            row[2] = request.getStatus();
            row[3] = ((WebsiteAdminWorkRequest) request);
            model.addRow(row);
            }
        }
        
        adminratingjTable.setSelectionBackground(Color.getHSBColor(0.2F, 0.1F, 0.2F));
        adminratingjTable.setSelectionForeground(Color.white);
        
    }
    
    public void usersdatamap(String user,String rate)
    {
        
       if(flag){
           userdata = new HashMap<>();
           flag = false;
       }
           
    if(userdata.containsKey(user))
    {
       userdata.get(user).add(rate);
       userdata.put(user, userdata.get(user));
    } else{
        ArrayList<String> newrate = new ArrayList<>();
        newrate.add(rate);
        userdata.put(user, newrate);
    }
//        ArrayList<String> dd = userdata.get(user);
//        int awesome = Collections.frequency(dd, "Awesome");
//        int good = Collections.frequency(dd, "Good");
//        int average = Collections.frequency(dd, "Average");
//        int bad = Collections.frequency(dd, "bad");

    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        adminratingjTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        userjComboBox = new javax.swing.JComboBox();
        awesomejLabel = new javax.swing.JLabel();
        goodjLabel = new javax.swing.JLabel();
        averagejLabel = new javax.swing.JLabel();
        badjLabel = new javax.swing.JLabel();
        goodjLabel1 = new javax.swing.JLabel();
        awesomejLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        adminratingjTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        adminratingjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User", "Sent by", "Status", "Rating"
            }
        ));
        jScrollPane1.setViewportView(adminratingjTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(130, 90, 530, 151);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Overall ");
        add(jLabel1);
        jLabel1.setBounds(100, 320, 91, 29);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("View Rating");
        add(jLabel2);
        jLabel2.setBounds(270, 40, 143, 29);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Confirm Rating");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(300, 270, 171, 31);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Users");
        add(jLabel3);
        jLabel3.setBounds(100, 380, 58, 27);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Show");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(140, 420, 85, 31);

        userjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        userjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userjComboBoxActionPerformed(evt);
            }
        });
        add(userjComboBox);
        userjComboBox.setBounds(160, 380, 70, 22);

        awesomejLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        awesomejLabel.setText("0");
        add(awesomejLabel);
        awesomejLabel.setBounds(270, 430, 11, 22);

        goodjLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        goodjLabel.setText("0");
        add(goodjLabel);
        goodjLabel.setBounds(410, 430, 11, 22);

        averagejLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        averagejLabel.setText("0");
        add(averagejLabel);
        averagejLabel.setBounds(510, 430, 11, 22);

        badjLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        badjLabel.setText("0");
        add(badjLabel);
        badjLabel.setBounds(610, 430, 11, 22);

        goodjLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        goodjLabel1.setText("Awesome");
        add(goodjLabel1);
        goodjLabel1.setBounds(250, 380, 87, 22);

        awesomejLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        awesomejLabel1.setText("Good");
        add(awesomejLabel1);
        awesomejLabel1.setBounds(380, 380, 46, 22);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Average");
        add(jLabel6);
        jLabel6.setBounds(480, 380, 74, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Bad");
        add(jLabel7);
        jLabel7.setBounds(600, 380, 34, 22);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(71, 467, 56, 55);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int selectedRow = adminratingjTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        WorkRequest request = (WorkRequest)adminratingjTable.getValueAt(selectedRow, 3);
        if(request.getStatus().equals("Approved")){
            JOptionPane.showMessageDialog(this, "Rating is already approved");
        }else{
            ((WebsiteAdminWorkRequest) request).setStatus("Approved");
        
             usersdatamap(request.getReceiver().toString(),((WebsiteAdminWorkRequest) request).toString());
        }
        populatetable();
        populatecombobox();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        ArrayList<String> dd = new ArrayList<>();
        //dd = userdata.get(userjComboBox.getSelectedItem().toString());
        dd = userdata.get(userjComboBox.getSelectedItem().toString());
        int awesome = Collections.frequency(dd, "Awesome");
        int good = Collections.frequency(dd, "Good");
        int average = Collections.frequency(dd, "Average");
        int bad = Collections.frequency(dd, "Bad");
        
        awesomejLabel.setText(String.valueOf(awesome));
        goodjLabel.setText(String.valueOf(good));
        averagejLabel.setText(String.valueOf(average));
        badjLabel.setText(String.valueOf(bad));
                
    }//GEN-LAST:event_jButton2ActionPerformed

    private void userjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userjComboBoxActionPerformed
        
//        ArrayList<String> dd = userdata.get(userjComboBox.getSelectedItem().toString());
//        int awesome = Collections.frequency(dd, "Awesome");
//        int good = Collections.frequency(dd, "Good");
//        int average = Collections.frequency(dd, "Average");
//        int bad = Collections.frequency(dd, "bad");
//        
//        awesomejLabel.setText(String.valueOf(awesome));
        
    }//GEN-LAST:event_userjComboBoxActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

         container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);

    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable adminratingjTable;
    private javax.swing.JLabel averagejLabel;
    private javax.swing.JLabel awesomejLabel;
    private javax.swing.JLabel awesomejLabel1;
    private javax.swing.JLabel badjLabel;
    private javax.swing.JLabel goodjLabel;
    private javax.swing.JLabel goodjLabel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox userjComboBox;
    // End of variables declaration//GEN-END:variables
}
