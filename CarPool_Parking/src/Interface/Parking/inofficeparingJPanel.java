/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Parking;

import Business.UserAccount.UserAccount;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Vivek
 */
public class inofficeparingJPanel extends javax.swing.JPanel {

    /**
     * Creates new form inofficeparingJPanel
     */
    JPanel container;
    UserAccount account;
    int count =0;
    boolean selectedslot = false;
    int[] slots = new int[9];
    JLabel bookparking;
    boolean seatbooked = false;

    public inofficeparingJPanel(JPanel container, UserAccount account) {
        initComponents();
        this.container = container;
        this.setSize(600, 650);
        this.account = account;
        initialsetup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        availableslotsjLabel = new javax.swing.JLabel();
        selectslotjButton = new javax.swing.JButton();
        parking0 = new javax.swing.JLabel();
        parking3 = new javax.swing.JLabel();
        parking6 = new javax.swing.JLabel();
        parking1 = new javax.swing.JLabel();
        parking2 = new javax.swing.JLabel();
        parking4 = new javax.swing.JLabel();
        parking5 = new javax.swing.JLabel();
        parking7 = new javax.swing.JLabel();
        parking8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Smart parking");

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Display allocatments");

        availableslotsjLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        availableslotsjLabel.setText("<available slots>");

        selectslotjButton.setBackground(new java.awt.Color(0, 0, 0));
        selectslotjButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        selectslotjButton.setForeground(new java.awt.Color(255, 255, 255));
        selectslotjButton.setText("Select slot");
        selectslotjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectslotjButtonActionPerformed(evt);
            }
        });

        parking0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car11.png"))); // NOI18N
        parking0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parking0MouseClicked(evt);
            }
        });

        parking3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car15.png"))); // NOI18N
        parking3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parking3MouseClicked(evt);
            }
        });

        parking6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car17.png"))); // NOI18N
        parking6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parking6MouseClicked(evt);
            }
        });

        parking1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car12.png"))); // NOI18N
        parking1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parking1MouseClicked(evt);
            }
        });

        parking2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car13.png"))); // NOI18N
        parking2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parking2MouseClicked(evt);
            }
        });

        parking4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car14.png"))); // NOI18N
        parking4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parking4MouseClicked(evt);
            }
        });

        parking5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car16.png"))); // NOI18N
        parking5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parking5MouseClicked(evt);
            }
        });

        parking7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car11.png"))); // NOI18N
        parking7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parking7MouseClicked(evt);
            }
        });

        parking8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/car14.png"))); // NOI18N
        parking8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parking8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)
                        .addGap(44, 44, 44)
                        .addComponent(availableslotsjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(selectslotjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parking3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parking0)
                            .addComponent(parking6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parking1)
                            .addComponent(parking4)
                            .addComponent(parking7))
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parking8)
                            .addComponent(parking2)
                            .addComponent(parking5))))
                .addGap(126, 126, 126))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(availableslotsjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parking0)
                            .addComponent(parking1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(parking2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(parking4)
                            .addComponent(parking3))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parking6)
                            .addComponent(parking7)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(parking5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(parking8)
                        .addGap(2, 2, 2)))
                .addGap(34, 34, 34)
                .addComponent(selectslotjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void parking0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parking0MouseClicked
        if(slots[0] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
            bookparking = parking0;
        } else 
        {
        count++;
        bookparking = parking0;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
        
    }//GEN-LAST:event_parking0MouseClicked

    private void parking1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parking1MouseClicked
         if(slots[1] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
            bookparking = parking1;
        } else 
        {
        count++;
        bookparking = parking1;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
    }//GEN-LAST:event_parking1MouseClicked

    private void parking2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parking2MouseClicked
         if(slots[2] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
            bookparking = parking2;
        } else 
        {
        count++;
        bookparking = parking2;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
    }//GEN-LAST:event_parking2MouseClicked

    private void parking3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parking3MouseClicked
        if(slots[3] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
            bookparking = parking4;
        } else 
        {
        count++;
        bookparking = parking3;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
    }//GEN-LAST:event_parking3MouseClicked

    private void parking4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parking4MouseClicked
        if(slots[4] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
            bookparking = parking4;
        } else 
        {
        count++;
        bookparking = parking4;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
    }//GEN-LAST:event_parking4MouseClicked

    private void parking5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parking5MouseClicked
        if(slots[5] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
            bookparking = parking5;
        } else 
        {
        count++;
        bookparking = parking5;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
    }//GEN-LAST:event_parking5MouseClicked

    private void parking6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parking6MouseClicked
        if(slots[6] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
            bookparking = parking6;
        } else 
        {
        count++;
        bookparking = parking6;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
    }//GEN-LAST:event_parking6MouseClicked

    private void parking7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parking7MouseClicked
        if(slots[7] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
            bookparking = parking7;
        } else 
        {
        count++;
        bookparking = parking7;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
    }//GEN-LAST:event_parking7MouseClicked

    private void parking8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parking8MouseClicked
        if(slots[8] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
            bookparking = parking8;
        } else 
        {
        count++;
        bookparking = parking8;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
    }//GEN-LAST:event_parking8MouseClicked

    private void selectslotjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectslotjButtonActionPerformed
        
        if(bookparking == null){
            JOptionPane.showMessageDialog(this, "No parking slot is selected");
        }else{
            if(!seatbooked){
            ImageIcon background = new ImageIcon("E:/NEU/AED/Proposal/Images/car12.png");
            bookparking.setIcon(background);
            bookparking.setText("");
            seatbooked = true;
            }else
                JOptionPane.showMessageDialog(this, "Slot is already selected!!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_selectslotjButtonActionPerformed
    
    public void parkingsetting(int x){
    if(slots[x] == 99)
                {
        if(!selectedslot){
            count--;
            availableslotsjLabel.setText(String.valueOf(count));
            selectedslot = true;
        } else 
        {
        count++;
        Object d = new Object();
        d = "parking"+x;
        bookparking = (JLabel) d;
        }} else
            JOptionPane.showMessageDialog(this, "Parking slot is not free.");
    }
    
    
    
    
    public int randomparkingnumbers(int min,int max){
            Random rand = new Random();
            int randomNum = rand.nextInt((max - min) + 1) + min;
            return randomNum;
    }
    
    public void initialsetup()
    {
    int slotstofill = randomparkingnumbers(1,6);
    for(int x=0;x<=slotstofill;x++){
        int random = randomparkingnumbers(0,8);
        slots[random] = 99;
    }
    try{
    for(int a=0;a<9;a++)
        if(slots[a] == 99) { 
            count++;
            switch(a){
                case 0 : parking0.setIcon(null);
                parking0.setText("Vacant");
                break;
                case 1 : parking1.setIcon(null);
                parking1.setText("Vacant");
                break;
                case 2 : parking2.setIcon(null);
                parking2.setText("Vacant");
                break;
                case 3:  parking3.setIcon(null);
                parking3.setText("Vacant");
                break;
                case 4: parking4.setIcon(null);
                parking4.setText("Vacant");
                break;
                case 5 : parking5.setIcon(null);
                parking5.setText("Vacant");
                break;
                case 6 :parking6.setIcon(null);
                parking6.setText("Vacant");
                break;
                case 7 :parking7.setIcon(null);
                parking7.setText("Vacant");
                break;
                case 8 :parking8.setIcon(null);
                parking8.setText("Vacant");
                break; 
            }
        }
    }
     catch(Exception e){}
    availableslotsjLabel.setText(String.valueOf(count));
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel availableslotsjLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel parking0;
    private javax.swing.JLabel parking1;
    private javax.swing.JLabel parking2;
    private javax.swing.JLabel parking3;
    private javax.swing.JLabel parking4;
    private javax.swing.JLabel parking5;
    private javax.swing.JLabel parking6;
    private javax.swing.JLabel parking7;
    private javax.swing.JLabel parking8;
    private javax.swing.JButton selectslotjButton;
    // End of variables declaration//GEN-END:variables
}
